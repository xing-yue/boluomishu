<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP代理服务器" enabled="true">
        <stringProp name="ProxyControlGui.port">8889</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="城市列表" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SH" elementType="Argument">
            <stringProp name="Argument.name">SH</stringProp>
            <stringProp name="Argument.value">上海</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BJ" elementType="Argument">
            <stringProp name="Argument.name">BJ</stringProp>
            <stringProp name="Argument.value">北京</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SZ" elementType="Argument">
            <stringProp name="Argument.name">SZ</stringProp>
            <stringProp name="Argument.value">深圳</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NJ" elementType="Argument">
            <stringProp name="Argument.name">NJ</stringProp>
            <stringProp name="Argument.value">南京</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WH" elementType="Argument">
            <stringProp name="Argument.name">WH</stringProp>
            <stringProp name="Argument.value">武汉</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="XA" elementType="Argument">
            <stringProp name="Argument.name">XA</stringProp>
            <stringProp name="Argument.value">西安</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HZ" elementType="Argument">
            <stringProp name="Argument.name">HZ</stringProp>
            <stringProp name="Argument.value">杭州</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ZZ" elementType="Argument">
            <stringProp name="Argument.name">ZZ</stringProp>
            <stringProp name="Argument.value">郑州</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="XM" elementType="Argument">
            <stringProp name="Argument.name">XM</stringProp>
            <stringProp name="Argument.value">厦门</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="客户阶段" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="N" elementType="Argument">
            <stringProp name="Argument.name">N</stringProp>
            <stringProp name="Argument.value">391</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="D" elementType="Argument">
            <stringProp name="Argument.name">D</stringProp>
            <stringProp name="Argument.value">392</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="C" elementType="Argument">
            <stringProp name="Argument.name">C</stringProp>
            <stringProp name="Argument.value">393</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="B" elementType="Argument">
            <stringProp name="Argument.name">B</stringProp>
            <stringProp name="Argument.value">394</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="A" elementType="Argument">
            <stringProp name="Argument.name">A</stringProp>
            <stringProp name="Argument.value">395</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="V" elementType="Argument">
            <stringProp name="Argument.name">V</stringProp>
            <stringProp name="Argument.value">396</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="G" elementType="Argument">
            <stringProp name="Argument.name">G</stringProp>
            <stringProp name="Argument.value">397</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="合作性质" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="corp" elementType="Argument">
            <stringProp name="Argument.name">corp</stringProp>
            <stringProp name="Argument.value">471</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="agent" elementType="Argument">
            <stringProp name="Argument.name">agent</stringProp>
            <stringProp name="Argument.value">472</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mix" elementType="Argument">
            <stringProp name="Argument.name">mix</stringProp>
            <stringProp name="Argument.value">473</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="合作类型" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="customer" elementType="Argument">
            <stringProp name="Argument.name">customer</stringProp>
            <stringProp name="Argument.value">381</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="organization" elementType="Argument">
            <stringProp name="Argument.name">organization</stringProp>
            <stringProp name="Argument.value">382</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="放弃原因" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="na" elementType="Argument">
            <stringProp name="Argument.name">na</stringProp>
            <stringProp name="Argument.value">421</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户不存在</stringProp>
          </elementProp>
          <elementProp name="cl" elementType="Argument">
            <stringProp name="Argument.name">cl</stringProp>
            <stringProp name="Argument.value">422</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户倒闭</stringProp>
          </elementProp>
          <elementProp name="nc" elementType="Argument">
            <stringProp name="Argument.name">nc</stringProp>
            <stringProp name="Argument.value">423</stringProp>
            <stringProp name="Argument.desc">暂不合作</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="nkp" elementType="Argument">
            <stringProp name="Argument.name">nkp</stringProp>
            <stringProp name="Argument.value">424</stringProp>
            <stringProp name="Argument.desc">找不到kp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="et" elementType="Argument">
            <stringProp name="Argument.name">et</stringProp>
            <stringProp name="Argument.value">425</stringProp>
            <stringProp name="Argument.desc">电话错误</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="渠道类型" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="na" elementType="Argument">
            <stringProp name="Argument.name">na</stringProp>
            <stringProp name="Argument.value">421</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户不存在</stringProp>
          </elementProp>
          <elementProp name="cl" elementType="Argument">
            <stringProp name="Argument.name">cl</stringProp>
            <stringProp name="Argument.value">422</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户倒闭</stringProp>
          </elementProp>
          <elementProp name="nc" elementType="Argument">
            <stringProp name="Argument.name">nc</stringProp>
            <stringProp name="Argument.value">423</stringProp>
            <stringProp name="Argument.desc">暂不合作</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="nkp" elementType="Argument">
            <stringProp name="Argument.name">nkp</stringProp>
            <stringProp name="Argument.value">424</stringProp>
            <stringProp name="Argument.desc">找不到kp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="et" elementType="Argument">
            <stringProp name="Argument.name">et</stringProp>
            <stringProp name="Argument.value">425</stringProp>
            <stringProp name="Argument.desc">电话错误</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="数据字典" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="1" elementType="Argument">
            <stringProp name="Argument.name">1</stringProp>
            <stringProp name="Argument.value">crm.customerSource</stringProp>
            <stringProp name="Argument.desc">客户/商机来源</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="2" elementType="Argument">
            <stringProp name="Argument.name">2</stringProp>
            <stringProp name="Argument.value">crm.channelType</stringProp>
            <stringProp name="Argument.desc">渠道类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="3" elementType="Argument">
            <stringProp name="Argument.name">3</stringProp>
            <stringProp name="Argument.value">crm.channel</stringProp>
            <stringProp name="Argument.desc">渠道</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="4" elementType="Argument">
            <stringProp name="Argument.name">4</stringProp>
            <stringProp name="Argument.value">crm.cardType</stringProp>
            <stringProp name="Argument.desc">证件类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="5" elementType="Argument">
            <stringProp name="Argument.name">5</stringProp>
            <stringProp name="Argument.value">crm.decisionRole</stringProp>
            <stringProp name="Argument.desc">决策角色</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="6" elementType="Argument">
            <stringProp name="Argument.name">6</stringProp>
            <stringProp name="Argument.value">crm.contactsType</stringProp>
            <stringProp name="Argument.desc">联系人类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="7" elementType="Argument">
            <stringProp name="Argument.name">7</stringProp>
            <stringProp name="Argument.value">crm.contactType</stringProp>
            <stringProp name="Argument.desc">其他联系方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="8" elementType="Argument">
            <stringProp name="Argument.name">8</stringProp>
            <stringProp name="Argument.value">crm.industry</stringProp>
            <stringProp name="Argument.desc">行业</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="9" elementType="Argument">
            <stringProp name="Argument.name">9</stringProp>
            <stringProp name="Argument.value">crm.religion</stringProp>
            <stringProp name="Argument.desc">宗教</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="10" elementType="Argument">
            <stringProp name="Argument.name">10</stringProp>
            <stringProp name="Argument.value">crm.intimacy</stringProp>
            <stringProp name="Argument.desc">亲密程度</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11" elementType="Argument">
            <stringProp name="Argument.name">11</stringProp>
            <stringProp name="Argument.value">crm.constellation</stringProp>
            <stringProp name="Argument.desc">星座</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="12" elementType="Argument">
            <stringProp name="Argument.name">12</stringProp>
            <stringProp name="Argument.value">crm.character</stringProp>
            <stringProp name="Argument.desc">性格类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="13" elementType="Argument">
            <stringProp name="Argument.name">13</stringProp>
            <stringProp name="Argument.value">crm.zodiacSign</stringProp>
            <stringProp name="Argument.desc">生肖</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="14" elementType="Argument">
            <stringProp name="Argument.name">14</stringProp>
            <stringProp name="Argument.value">crm.cooperationType</stringProp>
            <stringProp name="Argument.desc">合作类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="15" elementType="Argument">
            <stringProp name="Argument.name">15</stringProp>
            <stringProp name="Argument.value">crm.stage</stringProp>
            <stringProp name="Argument.desc">客户阶段</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="16" elementType="Argument">
            <stringProp name="Argument.name">16</stringProp>
            <stringProp name="Argument.value">crm.abandonReason</stringProp>
            <stringProp name="Argument.desc">放弃原因</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="17" elementType="Argument">
            <stringProp name="Argument.name">17</stringProp>
            <stringProp name="Argument.value">crm.visitItem</stringProp>
            <stringProp name="Argument.desc">拜访事项</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="18" elementType="Argument">
            <stringProp name="Argument.name">18</stringProp>
            <stringProp name="Argument.value">crm.visitType</stringProp>
            <stringProp name="Argument.desc">拜访方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="19" elementType="Argument">
            <stringProp name="Argument.name">19</stringProp>
            <stringProp name="Argument.value">crm.cooperationNature</stringProp>
            <stringProp name="Argument.desc">合作性质</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="20" elementType="Argument">
            <stringProp name="Argument.name">20</stringProp>
            <stringProp name="Argument.value">crm.sendReceiveType</stringProp>
            <stringProp name="Argument.desc">发包接包</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="21" elementType="Argument">
            <stringProp name="Argument.name">21</stringProp>
            <stringProp name="Argument.value">crm.scene</stringProp>
            <stringProp name="Argument.desc">初次合作场景</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="22" elementType="Argument">
            <stringProp name="Argument.name">22</stringProp>
            <stringProp name="Argument.value">crm.archiveType</stringProp>
            <stringProp name="Argument.desc">实现方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="23" elementType="Argument">
            <stringProp name="Argument.name">23</stringProp>
            <stringProp name="Argument.value">crm.declareTaxType</stringProp>
            <stringProp name="Argument.desc">报税</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="24" elementType="Argument">
            <stringProp name="Argument.name">24</stringProp>
            <stringProp name="Argument.value">crm.agreementTemplate</stringProp>
            <stringProp name="Argument.desc">合同协议模板</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="25" elementType="Argument">
            <stringProp name="Argument.name">25</stringProp>
            <stringProp name="Argument.value">crm.invoiceType</stringProp>
            <stringProp name="Argument.desc">开票类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="26" elementType="Argument">
            <stringProp name="Argument.name">26</stringProp>
            <stringProp name="Argument.value">crm.invoicePaymentType</stringProp>
            <stringProp name="Argument.desc">票款方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="27" elementType="Argument">
            <stringProp name="Argument.name">27</stringProp>
            <stringProp name="Argument.value">crm.paymentType</stringProp>
            <stringProp name="Argument.desc">付款方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="28" elementType="Argument">
            <stringProp name="Argument.name">28</stringProp>
            <stringProp name="Argument.value">crm.payMode</stringProp>
            <stringProp name="Argument.desc">付款模式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="29" elementType="Argument">
            <stringProp name="Argument.name">29</stringProp>
            <stringProp name="Argument.value">crm.startupStatus</stringProp>
            <stringProp name="Argument.desc">启动状态</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="30" elementType="Argument">
            <stringProp name="Argument.name">30</stringProp>
            <stringProp name="Argument.value">crm.billMode</stringProp>
            <stringProp name="Argument.desc">出账模式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="31" elementType="Argument">
            <stringProp name="Argument.name">31</stringProp>
            <stringProp name="Argument.value">crm.billRule</stringProp>
            <stringProp name="Argument.desc">出账规则</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="32" elementType="Argument">
            <stringProp name="Argument.name">32</stringProp>
            <stringProp name="Argument.value">crm.paymentChannel</stringProp>
            <stringProp name="Argument.desc">支付渠道</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="33" elementType="Argument">
            <stringProp name="Argument.name">33</stringProp>
            <stringProp name="Argument.value">crm.settleType</stringProp>
            <stringProp name="Argument.desc">结算方式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="34" elementType="Argument">
            <stringProp name="Argument.name">34</stringProp>
            <stringProp name="Argument.value">crm.priceType</stringProp>
            <stringProp name="Argument.desc">价格类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="35" elementType="Argument">
            <stringProp name="Argument.name">35</stringProp>
            <stringProp name="Argument.value">crm.messageType</stringProp>
            <stringProp name="Argument.desc">消息类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="36" elementType="Argument">
            <stringProp name="Argument.name">36</stringProp>
            <stringProp name="Argument.value">crm.bizType</stringProp>
            <stringProp name="Argument.desc">业务类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="37" elementType="Argument">
            <stringProp name="Argument.name">37</stringProp>
            <stringProp name="Argument.value">crm.pushChannel</stringProp>
            <stringProp name="Argument.desc">推送通道</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="38" elementType="Argument">
            <stringProp name="Argument.name">38</stringProp>
            <stringProp name="Argument.value">crm.stageType</stringProp>
            <stringProp name="Argument.desc">阶段类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="39" elementType="Argument">
            <stringProp name="Argument.name">39</stringProp>
            <stringProp name="Argument.value">crm.operatePlatform</stringProp>
            <stringProp name="Argument.desc">操作平台</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="40" elementType="Argument">
            <stringProp name="Argument.name">40</stringProp>
            <stringProp name="Argument.value">crm.paymentType</stringProp>
            <stringProp name="Argument.desc">支付类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="41" elementType="Argument">
            <stringProp name="Argument.name">41</stringProp>
            <stringProp name="Argument.value">crm.offerType</stringProp>
            <stringProp name="Argument.desc">报价模式</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="42" elementType="Argument">
            <stringProp name="Argument.name">42</stringProp>
            <stringProp name="Argument.value">crm.startupApplyType</stringProp>
            <stringProp name="Argument.desc">启动申请类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="43" elementType="Argument">
            <stringProp name="Argument.name">43</stringProp>
            <stringProp name="Argument.value">crm.roleType</stringProp>
            <stringProp name="Argument.desc">角色类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="44" elementType="Argument">
            <stringProp name="Argument.name">44</stringProp>
            <stringProp name="Argument.value">crm.yesOrNo</stringProp>
            <stringProp name="Argument.desc">全局开关字段：是否</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="45" elementType="Argument">
            <stringProp name="Argument.name">45</stringProp>
            <stringProp name="Argument.value">crm.deptType</stringProp>
            <stringProp name="Argument.desc">部门类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="46" elementType="Argument">
            <stringProp name="Argument.name">46</stringProp>
            <stringProp name="Argument.value">crm.deptLevel</stringProp>
            <stringProp name="Argument.desc">部门级别</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="47" elementType="Argument">
            <stringProp name="Argument.name">47</stringProp>
            <stringProp name="Argument.value">crm.deptTypeLevel</stringProp>
            <stringProp name="Argument.desc">部门类型和级别关联联动</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="48" elementType="Argument">
            <stringProp name="Argument.name">48</stringProp>
            <stringProp name="Argument.value">crm.operateType</stringProp>
            <stringProp name="Argument.desc">操作类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="49" elementType="Argument">
            <stringProp name="Argument.name">49</stringProp>
            <stringProp name="Argument.value">crm.powerType</stringProp>
            <stringProp name="Argument.desc">数据权限范围</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="参数化变量（预生产）" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sysDate" elementType="Argument">
            <stringProp name="Argument.name">sysDate</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">系统当前日期</stringProp>
          </elementProp>
          <elementProp name="sysTime" elementType="Argument">
            <stringProp name="Argument.name">sysTime</stringProp>
            <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
            <stringProp name="Argument.desc">系统当前日期(毫秒)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shiftDate" elementType="Argument">
            <stringProp name="Argument.name">shiftDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P365D,,)}</stringProp>
            <stringProp name="Argument.desc">系统日期三十天后</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaLoginUrl" elementType="Argument">
            <stringProp name="Argument.name">moaLoginUrl</stringProp>
            <stringProp name="Argument.value">pre.s.login.viphrm.com</stringProp>
            <stringProp name="Argument.desc">moa登陆url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesUser" elementType="Argument">
            <stringProp name="Argument.name">salesUser</stringProp>
            <stringProp name="Argument.value">11100000502</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售用户</stringProp>
          </elementProp>
          <elementProp name="salesPwd" elementType="Argument">
            <stringProp name="Argument.name">salesPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售密码</stringProp>
          </elementProp>
          <elementProp name="salesManagerUser" elementType="Argument">
            <stringProp name="Argument.name">salesManagerUser</stringProp>
            <stringProp name="Argument.value">11100000501</stringProp>
            <stringProp name="Argument.desc">销售管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesManagerPwd" elementType="Argument">
            <stringProp name="Argument.name">salesManagerPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">销售管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorUser" elementType="Argument">
            <stringProp name="Argument.name">operatorUser</stringProp>
            <stringProp name="Argument.value">11100000505</stringProp>
            <stringProp name="Argument.desc">运营用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorPwd" elementType="Argument">
            <stringProp name="Argument.name">operatorPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">运营密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerUser" elementType="Argument">
            <stringProp name="Argument.name">custServMangerUser</stringProp>
            <stringProp name="Argument.value">11100000514</stringProp>
            <stringProp name="Argument.desc">客服管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerPwd" elementType="Argument">
            <stringProp name="Argument.name">custServMangerPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">客服管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServUser" elementType="Argument">
            <stringProp name="Argument.name">custServUser</stringProp>
            <stringProp name="Argument.value">11100000504</stringProp>
            <stringProp name="Argument.desc">客服用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServPwd" elementType="Argument">
            <stringProp name="Argument.name">custServPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">客服密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webHost" elementType="Argument">
            <stringProp name="Argument.name">webHost</stringProp>
            <stringProp name="Argument.value">prepineapple.viphrm.com</stringProp>
            <stringProp name="Argument.desc">web端Host地址</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mossHost" elementType="Argument">
            <stringProp name="Argument.name">mossHost</stringProp>
            <stringProp name="Argument.value">premoss.viphrm.com</stringProp>
            <stringProp name="Argument.desc">moss登陆url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webPort" elementType="Argument">
            <stringProp name="Argument.name">webPort</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">web端端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="http" elementType="Argument">
            <stringProp name="Argument.name">http</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.desc">请求协议类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaHttp" elementType="Argument">
            <stringProp name="Argument.name">moaHttp</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.desc">moa登录接口请求类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaPort" elementType="Argument">
            <stringProp name="Argument.name">moaPort</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">moa登录接口端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randStr" elementType="Argument">
            <stringProp name="Argument.name">randStr</stringProp>
            <stringProp name="Argument.value">${__RandomString(8,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            <stringProp name="Argument.desc">随机字符串</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="giveUpReason" elementType="Argument">
            <stringProp name="Argument.name">giveUpReason</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(na|cl|nc|nkp|et,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">放弃原因</stringProp>
          </elementProp>
          <elementProp name="operatePlatform" elementType="Argument">
            <stringProp name="Argument.name">operatePlatform</stringProp>
            <stringProp name="Argument.value">752</stringProp>
            <stringProp name="Argument.desc">操作平台 :751 APP,752 PC</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cooperationNature" elementType="Argument">
            <stringProp name="Argument.name">cooperationNature</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(corp|agent|mix,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作性质</stringProp>
          </elementProp>
          <elementProp name="cooperationType" elementType="Argument">
            <stringProp name="Argument.name">cooperationType</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(customer|organization,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作类型</stringProp>
          </elementProp>
          <elementProp name="stageIdN" elementType="Argument">
            <stringProp name="Argument.name">stageIdN</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为N</stringProp>
          </elementProp>
          <elementProp name="stageIdDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(D|C|B,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为D、B、C</stringProp>
          </elementProp>
          <elementProp name="stageIdNDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdNDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N|D|C|B,)}</stringProp>
            <stringProp name="Argument.desc">客户阶段为N、D、B、C</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mobile" elementType="Argument">
            <stringProp name="Argument.name">mobile</stringProp>
            <stringProp name="Argument.value">1${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.desc">联系人电话</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invoiceTitle" elementType="Argument">
            <stringProp name="Argument.name">invoiceTitle</stringProp>
            <stringProp name="Argument.value">${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">发票抬头</stringProp>
          </elementProp>
          <elementProp name="address" elementType="Argument">
            <stringProp name="Argument.name">address</stringProp>
            <stringProp name="Argument.value">测试地址_${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            <stringProp name="Argument.desc">32随机字符</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contractAgreementCode" elementType="Argument">
            <stringProp name="Argument.name">contractAgreementCode</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMddHHMMss,)}${__time(,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">协议编号</stringProp>
          </elementProp>
          <elementProp name="invoiceType" elementType="Argument">
            <stringProp name="Argument.name">invoiceType</stringProp>
            <stringProp name="Argument.value">${__Random(571,572,)}</stringProp>
            <stringProp name="Argument.desc">开票类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerServiceId" elementType="Argument">
            <stringProp name="Argument.name">customerServiceId</stringProp>
            <stringProp name="Argument.value">300045</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客服id</stringProp>
          </elementProp>
          <elementProp name="gcustomerServiceId" elementType="Argument">
            <stringProp name="Argument.name">gcustomerServiceId</stringProp>
            <stringProp name="Argument.value">300050</stringProp>
            <stringProp name="Argument.desc">客服主管id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="visitDate" elementType="Argument">
            <stringProp name="Argument.name">visitDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P3D,,)}</stringProp>
            <stringProp name="Argument.desc">拜访日期</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salseid" elementType="Argument">
            <stringProp name="Argument.name">salseid</stringProp>
            <stringProp name="Argument.value">300037</stringProp>
            <stringProp name="Argument.desc">普通销售id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gsalseid" elementType="Argument">
            <stringProp name="Argument.name">gsalseid</stringProp>
            <stringProp name="Argument.value">300036</stringProp>
            <stringProp name="Argument.desc">销售管理id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="参数化变量（生产）" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sysDate" elementType="Argument">
            <stringProp name="Argument.name">sysDate</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">系统当前日期</stringProp>
          </elementProp>
          <elementProp name="sysTime" elementType="Argument">
            <stringProp name="Argument.name">sysTime</stringProp>
            <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
            <stringProp name="Argument.desc">系统当前日期(毫秒)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shiftDate" elementType="Argument">
            <stringProp name="Argument.name">shiftDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P365D,,)}</stringProp>
            <stringProp name="Argument.desc">系统日期三十天后</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaLoginUrl" elementType="Argument">
            <stringProp name="Argument.name">moaLoginUrl</stringProp>
            <stringProp name="Argument.value">s.login.viphrm.com</stringProp>
            <stringProp name="Argument.desc">moa登陆url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesUser" elementType="Argument">
            <stringProp name="Argument.name">salesUser</stringProp>
            <stringProp name="Argument.value">13052070538</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售用户</stringProp>
          </elementProp>
          <elementProp name="salesPwd" elementType="Argument">
            <stringProp name="Argument.name">salesPwd</stringProp>
            <stringProp name="Argument.value">a215615</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售密码</stringProp>
          </elementProp>
          <elementProp name="salesManagerUser" elementType="Argument">
            <stringProp name="Argument.name">salesManagerUser</stringProp>
            <stringProp name="Argument.value">18914661768</stringProp>
            <stringProp name="Argument.desc">销售管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesManagerPwd" elementType="Argument">
            <stringProp name="Argument.name">salesManagerPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">销售管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorUser" elementType="Argument">
            <stringProp name="Argument.name">operatorUser</stringProp>
            <stringProp name="Argument.value">13761468023</stringProp>
            <stringProp name="Argument.desc">运营用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorPwd" elementType="Argument">
            <stringProp name="Argument.name">operatorPwd</stringProp>
            <stringProp name="Argument.value">a1234567</stringProp>
            <stringProp name="Argument.desc">运营密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerUser" elementType="Argument">
            <stringProp name="Argument.name">custServMangerUser</stringProp>
            <stringProp name="Argument.value">17521636199</stringProp>
            <stringProp name="Argument.desc">客服管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerPwd" elementType="Argument">
            <stringProp name="Argument.name">custServMangerPwd</stringProp>
            <stringProp name="Argument.value">wwb922810.</stringProp>
            <stringProp name="Argument.desc">客服管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServUser" elementType="Argument">
            <stringProp name="Argument.name">custServUser</stringProp>
            <stringProp name="Argument.value">13212778858</stringProp>
            <stringProp name="Argument.desc">客服用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServPwd" elementType="Argument">
            <stringProp name="Argument.name">custServPwd</stringProp>
            <stringProp name="Argument.value">lilisi12345</stringProp>
            <stringProp name="Argument.desc">客服密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webHost" elementType="Argument">
            <stringProp name="Argument.name">webHost</stringProp>
            <stringProp name="Argument.value">pineapple.viphrm.com</stringProp>
            <stringProp name="Argument.desc">web端Host地址</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mossHost" elementType="Argument">
            <stringProp name="Argument.name">mossHost</stringProp>
            <stringProp name="Argument.value">moss.viphrm.com</stringProp>
            <stringProp name="Argument.desc">moss登陆url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webPort" elementType="Argument">
            <stringProp name="Argument.name">webPort</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">web端端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="http" elementType="Argument">
            <stringProp name="Argument.name">http</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.desc">请求协议类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaHttp" elementType="Argument">
            <stringProp name="Argument.name">moaHttp</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.desc">moa登录接口请求类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaPort" elementType="Argument">
            <stringProp name="Argument.name">moaPort</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">moa登录接口端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randStr" elementType="Argument">
            <stringProp name="Argument.name">randStr</stringProp>
            <stringProp name="Argument.value">${__RandomString(8,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            <stringProp name="Argument.desc">随机字符串</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="giveUpReason" elementType="Argument">
            <stringProp name="Argument.name">giveUpReason</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(na|cl|nc|nkp|et,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">放弃原因</stringProp>
          </elementProp>
          <elementProp name="operatePlatform" elementType="Argument">
            <stringProp name="Argument.name">operatePlatform</stringProp>
            <stringProp name="Argument.value">752</stringProp>
            <stringProp name="Argument.desc">操作平台 :751 APP,752 PC</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cooperationNature" elementType="Argument">
            <stringProp name="Argument.name">cooperationNature</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(corp|agent|mix,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作性质</stringProp>
          </elementProp>
          <elementProp name="cooperationType" elementType="Argument">
            <stringProp name="Argument.name">cooperationType</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(customer|organization,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作类型</stringProp>
          </elementProp>
          <elementProp name="stageIdN" elementType="Argument">
            <stringProp name="Argument.name">stageIdN</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为N</stringProp>
          </elementProp>
          <elementProp name="stageIdDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(D|C|B,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为D、B、C</stringProp>
          </elementProp>
          <elementProp name="stageIdNDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdNDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N|D|C|B,)}</stringProp>
            <stringProp name="Argument.desc">客户阶段为N、D、B、C</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mobile" elementType="Argument">
            <stringProp name="Argument.name">mobile</stringProp>
            <stringProp name="Argument.value">1${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.desc">联系人电话</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invoiceTitle" elementType="Argument">
            <stringProp name="Argument.name">invoiceTitle</stringProp>
            <stringProp name="Argument.value">${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">发票抬头</stringProp>
          </elementProp>
          <elementProp name="address" elementType="Argument">
            <stringProp name="Argument.name">address</stringProp>
            <stringProp name="Argument.value">测试地址_${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            <stringProp name="Argument.desc">32随机字符</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contractAgreementCode" elementType="Argument">
            <stringProp name="Argument.name">contractAgreementCode</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMddHHMMss,)}${__time(,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">协议编号</stringProp>
          </elementProp>
          <elementProp name="invoiceType" elementType="Argument">
            <stringProp name="Argument.name">invoiceType</stringProp>
            <stringProp name="Argument.value">${__Random(571,572,)}</stringProp>
            <stringProp name="Argument.desc">开票类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerServiceId" elementType="Argument">
            <stringProp name="Argument.name">customerServiceId</stringProp>
            <stringProp name="Argument.value">300328</stringProp>
            <stringProp name="Argument.desc">客服id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gcustomerServiceId" elementType="Argument">
            <stringProp name="Argument.name">gcustomerServiceId</stringProp>
            <stringProp name="Argument.value">300281</stringProp>
            <stringProp name="Argument.desc">客服主管id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="visitDate" elementType="Argument">
            <stringProp name="Argument.name">visitDate</stringProp>
            <stringProp name="Argument.value">2020-02-16</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">拜访日期</stringProp>
          </elementProp>
          <elementProp name="salseid" elementType="Argument">
            <stringProp name="Argument.name">salseid</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">普通销售id</stringProp>
          </elementProp>
          <elementProp name="gsalseid" elementType="Argument">
            <stringProp name="Argument.name">gsalseid</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">销售管理id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="参数化变量（开发）" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sysDate" elementType="Argument">
            <stringProp name="Argument.name">sysDate</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">系统当前日期</stringProp>
          </elementProp>
          <elementProp name="sysTime" elementType="Argument">
            <stringProp name="Argument.name">sysTime</stringProp>
            <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
            <stringProp name="Argument.desc">系统当前日期(毫秒)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="shiftDate" elementType="Argument">
            <stringProp name="Argument.name">shiftDate</stringProp>
            <stringProp name="Argument.value">${__timeShift(yyyy-MM-dd,,P365D,,)}</stringProp>
            <stringProp name="Argument.desc">系统日期三十天后</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaLoginUrl" elementType="Argument">
            <stringProp name="Argument.name">moaLoginUrl</stringProp>
            <stringProp name="Argument.value">192.168.2.225</stringProp>
            <stringProp name="Argument.desc">moa登陆url</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesUser" elementType="Argument">
            <stringProp name="Argument.name">salesUser</stringProp>
            <stringProp name="Argument.value">15821996168</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售用户</stringProp>
          </elementProp>
          <elementProp name="salesPwd" elementType="Argument">
            <stringProp name="Argument.name">salesPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">销售密码</stringProp>
          </elementProp>
          <elementProp name="salesManagerUser" elementType="Argument">
            <stringProp name="Argument.name">salesManagerUser</stringProp>
            <stringProp name="Argument.value">18616393587</stringProp>
            <stringProp name="Argument.desc">销售管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesManagerPwd" elementType="Argument">
            <stringProp name="Argument.name">salesManagerPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">销售管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorUser" elementType="Argument">
            <stringProp name="Argument.name">operatorUser</stringProp>
            <stringProp name="Argument.value">18616393587</stringProp>
            <stringProp name="Argument.desc">运营用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorPwd" elementType="Argument">
            <stringProp name="Argument.name">operatorPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">运营密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerUser" elementType="Argument">
            <stringProp name="Argument.name">custServMangerUser</stringProp>
            <stringProp name="Argument.value">11100001000</stringProp>
            <stringProp name="Argument.desc">客服管理者用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServMangerPwd" elementType="Argument">
            <stringProp name="Argument.name">custServMangerPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">客服管理者密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServUser" elementType="Argument">
            <stringProp name="Argument.name">custServUser</stringProp>
            <stringProp name="Argument.value">18616393587</stringProp>
            <stringProp name="Argument.desc">客服用户</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="custServPwd" elementType="Argument">
            <stringProp name="Argument.name">custServPwd</stringProp>
            <stringProp name="Argument.value">123456</stringProp>
            <stringProp name="Argument.desc">客服密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webHost" elementType="Argument">
            <stringProp name="Argument.name">webHost</stringProp>
            <stringProp name="Argument.value">devpineapple.viphrm.com</stringProp>
            <stringProp name="Argument.desc">web端Host地址</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="webPort" elementType="Argument">
            <stringProp name="Argument.name">webPort</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.desc">web端端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="http" elementType="Argument">
            <stringProp name="Argument.name">http</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.desc">请求协议类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaHttp" elementType="Argument">
            <stringProp name="Argument.name">moaHttp</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.desc">moa登录接口请求类型</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moaPort" elementType="Argument">
            <stringProp name="Argument.name">moaPort</stringProp>
            <stringProp name="Argument.value">8409</stringProp>
            <stringProp name="Argument.desc">moa登录接口端口号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randStr" elementType="Argument">
            <stringProp name="Argument.name">randStr</stringProp>
            <stringProp name="Argument.value">${__RandomString(8,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            <stringProp name="Argument.desc">随机字符串</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="giveUpReason" elementType="Argument">
            <stringProp name="Argument.name">giveUpReason</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(na|cl|nc|nkp|et,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">放弃原因</stringProp>
          </elementProp>
          <elementProp name="operatePlatform" elementType="Argument">
            <stringProp name="Argument.name">operatePlatform</stringProp>
            <stringProp name="Argument.value">752</stringProp>
            <stringProp name="Argument.desc">操作平台 :751 APP,752 PC</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cooperationNature" elementType="Argument">
            <stringProp name="Argument.name">cooperationNature</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(corp|agent,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作性质</stringProp>
          </elementProp>
          <elementProp name="cooperationType" elementType="Argument">
            <stringProp name="Argument.name">cooperationType</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(customer|organization,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">合作类型</stringProp>
          </elementProp>
          <elementProp name="stageIdN" elementType="Argument">
            <stringProp name="Argument.name">stageIdN</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为N</stringProp>
          </elementProp>
          <elementProp name="stageIdDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(D|C|B,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">客户阶段为D、B、C</stringProp>
          </elementProp>
          <elementProp name="stageIdNDBC" elementType="Argument">
            <stringProp name="Argument.name">stageIdNDBC</stringProp>
            <stringProp name="Argument.value">${__RandomFromMultipleVars(N|D|C|B,)}</stringProp>
            <stringProp name="Argument.desc">客户阶段为N、D、B、C</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mobile" elementType="Argument">
            <stringProp name="Argument.name">mobile</stringProp>
            <stringProp name="Argument.value">1${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.desc">联系人电话</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="contractId" elementType="Argument">
            <stringProp name="Argument.name">contractId</stringProp>
            <stringProp name="Argument.value">${__Random(3000000000,9999999999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="预生产数据库" enabled="true">
        <stringProp name="dataSource">testsql</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://121.40.137.186:1433;DatabaseName=MsPineappleDB</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <stringProp name="username">pineappledbuser</stringProp>
        <stringProp name="password">2@07pr1pin1u2D75a</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="流程" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通销售登录" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moaLogin（普通销售）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userName&quot;:&quot;${salesUser}&quot;,&quot;password&quot;:&quot;${salesPwd}&quot;,&quot;verifyCode&quot;:&quot;&quot;,&quot;codeKey&quot;:&quot;&quot;,&quot;appId&quot;:&quot;13001&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${moaLoginUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${moaPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${moaHttp}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${loginUrl}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">RecContentType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Mode</stringProp>
                  <stringProp name="Header.value">HTML</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">EncType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Resource</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ptoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;,&quot;loginAccount&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3506294">role</stringProp>
                <stringProp name="-1360137242">cityId</stringProp>
                <stringProp name="214313067">provinceId</stringProp>
                <stringProp name="3002509">area</stringProp>
                <stringProp name="-372002811">countyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1359452880">
                  <stringProp name="817835162">普通销售</stringProp>
                  <stringProp name="1507745313">320541</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-1229308400">${__RandomFromMultipleVars(BJ,)}</stringProp>
                  <stringProp name="-1025550969">${__Random(36,53,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="销售管理登录" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moaLogin（销售管理）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userName&quot;:&quot;${salesManagerUser}&quot;,&quot;password&quot;:&quot;${custServMangerPwd}&quot;,&quot;verifyCode&quot;:&quot;&quot;,&quot;codeKey&quot;:&quot;&quot;,&quot;appId&quot;:&quot;13001&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${moaLoginUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${moaPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${moaHttp}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${loginUrl}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">RecContentType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Mode</stringProp>
                  <stringProp name="Header.value">HTML</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">EncType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Resource</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">gtoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;,&quot;loginAccount&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3506294">role</stringProp>
                <stringProp name="-1360137242">cityId</stringProp>
                <stringProp name="214313067">provinceId</stringProp>
                <stringProp name="3002509">area</stringProp>
                <stringProp name="-372002811">countyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1359452880">
                  <stringProp name="817835162">普通销售</stringProp>
                  <stringProp name="1507745313">320541</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-1229308400">${__RandomFromMultipleVars(BJ,)}</stringProp>
                  <stringProp name="-1025550969">${__Random(36,53,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客服登录" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moaLogin（客服专员）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userName&quot;:&quot;${custServUser}&quot;,&quot;password&quot;:&quot;${custServPwd}&quot;,&quot;verifyCode&quot;:&quot;&quot;,&quot;codeKey&quot;:&quot;&quot;,&quot;appId&quot;:&quot;13001&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${moaLoginUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${moaPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${moaHttp}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${loginUrl}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">RecContentType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Mode</stringProp>
                  <stringProp name="Header.value">HTML</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">EncType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Resource</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ktoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;,&quot;loginAccount&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3506294">role</stringProp>
                <stringProp name="-1360137242">cityId</stringProp>
                <stringProp name="214313067">provinceId</stringProp>
                <stringProp name="3002509">area</stringProp>
                <stringProp name="-372002811">countyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1359452880">
                  <stringProp name="817835162">普通销售</stringProp>
                  <stringProp name="1507745313">320541</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-1229308400">${__RandomFromMultipleVars(BJ,)}</stringProp>
                  <stringProp name="-1025550969">${__Random(36,53,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客服管理登录" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moaLogin（客服管理）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userName&quot;:&quot;${custServMangerUser}&quot;,&quot;password&quot;:&quot;${custServMangerPwd}&quot;,&quot;verifyCode&quot;:&quot;&quot;,&quot;codeKey&quot;:&quot;&quot;,&quot;appId&quot;:&quot;13001&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${moaLoginUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${moaPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${moaHttp}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${loginUrl}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">RecContentType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Mode</stringProp>
                  <stringProp name="Header.value">HTML</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">EncType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Resource</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">kgtoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;,&quot;loginAccount&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3506294">role</stringProp>
                <stringProp name="-1360137242">cityId</stringProp>
                <stringProp name="214313067">provinceId</stringProp>
                <stringProp name="3002509">area</stringProp>
                <stringProp name="-372002811">countyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1359452880">
                  <stringProp name="817835162">普通销售</stringProp>
                  <stringProp name="1507745313">320541</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-1229308400">${__RandomFromMultipleVars(BJ,)}</stringProp>
                  <stringProp name="-1025550969">${__Random(36,53,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="运营登录" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="moaLogin（运营）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;userName&quot;:&quot;${operatorUser}&quot;,&quot;password&quot;:&quot;${operatorPwd}&quot;,&quot;verifyCode&quot;:&quot;&quot;,&quot;codeKey&quot;:&quot;&quot;,&quot;appId&quot;:&quot;13001&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${moaLoginUrl}</stringProp>
            <stringProp name="HTTPSampler.port">${moaPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${moaHttp}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${loginUrl}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:45.0) Gecko/20100101 Firefox/45.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">RecContentType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Mode</stringProp>
                  <stringProp name="Header.value">HTML</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">EncType</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Resource</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ytoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;,&quot;loginAccount&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3506294">role</stringProp>
                <stringProp name="-1360137242">cityId</stringProp>
                <stringProp name="214313067">provinceId</stringProp>
                <stringProp name="3002509">area</stringProp>
                <stringProp name="-372002811">countyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1359452880">
                  <stringProp name="817835162">普通销售</stringProp>
                  <stringProp name="1507745313">320541</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-1229308400">${__RandomFromMultipleVars(BJ,)}</stringProp>
                  <stringProp name="-1025550969">${__Random(36,53,)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通销售（添加D阶段客户、客户阶段修改A、放弃，认领，修改，客户启动、驳回，通过）" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机来源字典" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dicTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">crm.customerSource</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dicTypes</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/common/dataDict/querylist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4395</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">opportunitySource</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;dataKey&quot;:&quot;(.+?)&quot;,&quot;dataValue&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="行业字典" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dicTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">crm.industry</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">dicTypes</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/common/dataDict/querylist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4395</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">industryCode</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;dataKey&quot;:&quot;(.+?)&quot;,&quot;dataValue&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机（D）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;opportunityId&quot;: 0,&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
	&quot;channel&quot;: 44,&#xd;
	&quot;channelType&quot;: 31,&#xd;
	&quot;cityId&quot;: ${cityId},&#xd;
	&quot;cityName&quot;: &quot;&quot;,&#xd;
	&quot;countyId&quot;: ${countyId},&#xd;
	&quot;countyName&quot;: &quot;&quot;,&#xd;
	&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
	&quot;industry&quot;: ${industryCode},&#xd;
	&quot;introduce&quot;: &quot;&quot;,&#xd;
	&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
	&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
	&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
	&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
	&quot;provinceId&quot;: ${provinceId},&#xd;
	&quot;provinceName&quot;: &quot;&quot;,&#xd;
	&quot;relationCustomer&quot;: &quot;&quot;,&#xd;
	&quot;stageId&quot;: 392,&#xd;
	&quot;tax&quot;: &quot;&quot;,&#xd;
	&quot;tel&quot;: &quot;&quot;,&#xd;
	&quot;website&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;archiveType&quot;: 0,&#xd;
			&quot;averageBudget&quot;: 0,&#xd;
			&quot;cooperationNature&quot;: 0,&#xd;
			&quot;firstScene&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictAmountPerYear&quot;: 0,&#xd;
			&quot;predictNumber&quot;: 0,&#xd;
			&quot;predictStartupDate&quot;: &quot;&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: 0,&#xd;
			&quot;empCount&quot;: 0,&#xd;
			&quot;firstStartupNumber&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: 0,&#xd;
			&quot;predictStartupDate&quot;: &quot;&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: 0&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: 0,&#xd;
			&quot;declareTaxType&quot;: 0,&#xd;
			&quot;empCount&quot;: 0,&#xd;
			&quot;firstStartupNumber&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: 0,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: 0,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: 0,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 0,&#xd;
			&quot;predictStartupDate&quot;: &quot;&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;: &quot;当前客户&quot;,&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;contactsTypeText&quot;: &quot;合同联系人&quot;,&#xd;
			&quot;decisionRole&quot;: 71,&#xd;
			&quot;decisionRoleText&quot;: &quot;决策者&quot;,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;isBelongToCurrent&quot;: 0,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [{&#xd;
				&quot;contactInfo&quot;: &quot;&quot;&#xd;
			}],&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;birthday&quot;: null,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;hoppy&quot;: &quot;&quot;,&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCityName&quot;: &quot;&quot;,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;nativeCountyName&quot;: &quot;&quot;,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeProvinceName&quot;: &quot;&quot;,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCityName&quot;: &quot;&quot;,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialCountyName&quot;: &quot;&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialProvinceName&quot;: &quot;&quot;,&#xd;
			&quot;zodiacSign&quot;: 0&#xd;
		},&#xd;
		&quot;contactsId&quot;: 0.9235228441768584&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;北京市北京市东城区测试地址iuewriuweqwe&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/openOceanBO/addOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（商机id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">opportunityId</stringProp>
              <stringProp name="RegexExtractor.regex">,&quot;data&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="605180798">custName</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-234220784">
                  <stringProp name="1898510759">${role}老邢${__RandomString(3,比如针对马的毛色不同身高乃至岁数就能弄出几十上百个汉字来进行命名,)}（${area}）公司</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="110364420">time1</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1134370681">
                  <stringProp name="-450137268">${__time(yyyy-MM-dd HH:mm:ss.SSS,time)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=392 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访计划" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webHost}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC/opportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访计划id）" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">planid</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机拜访计划" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访计划" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityVisitPlan WHERE id=${planid} and visitType=451 and isdel=0;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">count</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段变更" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（A）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(A-B)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（A-B）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 394,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=394 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原A类降至B类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(B-C)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（B-C）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 393,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=393 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原B类降至C类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(C-D)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（C-D）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 392,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=392 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原C类降至D类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(D-N)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（D-N）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 391,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=391 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原D类降至N类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（A）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(A-C)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（A-C）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 393,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=393 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原A类降至C类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(C-N)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${ptoken}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（C-N）" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 391,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
                <stringProp name="HTTPSampler.port">${webPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">${http}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=391 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                  <stringProp name="dataSource">testsql</stringProp>
                  <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time1}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原C类降至N类，请核实！&apos; ;

</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Prepared Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">count</stringProp>
                </JDBCSampler>
                <hashTree>
                  <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                    <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                    <stringProp name="BeanShellAssertion.filename"></stringProp>
                    <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                    <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                  </BeanShellAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="商机修改（A）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据用户id查询用户信息" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/common/getUserAndDeptAndRolesInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4522</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">salesDeptId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.departmentId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">salesId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机-放弃" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityType&quot;:764,&quot;abandonReason&quot;:${giveUpReason},&quot;giveUpIdList&quot;:[{&quot;id&quot;:&quot;${opportunityId}&quot;,&quot;salesId&quot;:${salesId},&quot;salesDeptId&quot;:0}],&quot;remark&quot;:&quot;jmeter数据操作首次放弃&quot;,&quot;operatePlatform&quot;:${operatePlatform},&quot;operateType&quot;:892}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/giveUpMineBusinessOpportunitySingle</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4375</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=391 and salesid=0 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="部门商机认领" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;operatePlatform&quot;: ${operatePlatform},&#xd;
	&quot;opportunityId&quot;: &quot;${opportunityId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/deptBO/claimBusiness</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4485</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=391 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动申请——详情页信息查询" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">821</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getStartUpApplyInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contactsId; contactMobile; contactsType; decisionRole</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyContacts[0].contactsId; $.data.startupApplyContacts[0].mobile; $.data.startupApplyContacts[0].contactsType; $.data.startupApplyContacts[0].decisionRole</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户启动" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基本信息——选择发票收件人" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="opportunityId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${opportunityId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">opportunityId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectInvoiceAddresseeList</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invoiceAddresseeId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（全部）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 5,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;89734897238947349578&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的风格对方是个&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],		&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（除代发工资外全部产品）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],		&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（工薪记）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（社保）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 1&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（商保）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（商城）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 1,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（代发工资）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 1,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 5,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;89734897238947349578&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;的风格对方是个&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;cooperationNature&quot;: -1,&#xd;
	&quot;cooperationType&quot;: -1,&#xd;
	&quot;isStar&quot;: 0,&#xd;
	&quot;salesId&quot;: -1,&#xd;
	&quot;telephone&quot;: &quot;&quot;,&#xd;
	&quot;stageId&quot;: &quot;&quot;,&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 25&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].applyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1887589312">&quot;totalCount&quot;:1,</stringProp>
                <stringProp name="-1890703552">&quot;stageId&quot;:395</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动申请——详情页信息查询" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${applyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">821</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getStartUpApplyInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contractId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyMaker.contractId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动驳回" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;rejectReason&quot;:&quot;启动驳回${sysTime}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/auditing/reject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=650 and applysalesid=300037 and applytype=821 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户再次启动" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: null,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 1,&#xd;
		&quot;belongToCustomerId&quot;: 1,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: &quot;客户_Survenentor WorldWide &quot;&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;wwww2342343678654234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: 221128831,&#xd;
		&quot;signPrincipalName&quot;: &quot;&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;签约产品明细&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 582,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15964641148&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 1,&#xd;
		&quot;payFrequency&quot;: 23,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 0,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 1,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
		&quot;boughtCIPrice&quot;: &quot;0&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;1900-01-01&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 57,&#xd;
		&quot;sceneName&quot;: &quot;出行行业&quot;,&#xd;
		&quot;taskId&quot;: 71,&#xd;
		&quot;taskName&quot;: &quot;网约车司机&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;送豆腐大叔&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;东方大事发生的发&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: []&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;cooperationNature&quot;: -1,&#xd;
	&quot;cooperationType&quot;: -1,&#xd;
	&quot;isStar&quot;: 0,&#xd;
	&quot;salesId&quot;: -1,&#xd;
	&quot;telephone&quot;: &quot;&quot;,&#xd;
	&quot;stageId&quot;: &quot;&quot;,&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 25&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].applyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1887589312">&quot;totalCount&quot;:1,</stringProp>
                <stringProp name="-1890703552">&quot;stageId&quot;:395</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">22</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访记录" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webHost}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/visitRecordsPC/opportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访记录id）" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">jid</stringProp>
                <stringProp name="RegexExtractor.regex">{&quot;extra&quot;:(.+?)}}</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机拜访记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访记录" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunityVisitRecord WHERE id=${jid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="商机添加拜访信息-非负责人-添加失败" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="运营审核" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ytoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核-发票抬头添加保存接口" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;address&quot;:&quot;${address}&quot;,&#xd;
	&quot;bankAccountNo&quot;:&quot;6225&quot;,&#xd;
	&quot;cid&quot;:&quot;288572&quot;,&#xd;
	&quot;cityId&quot;:&quot;${cityId}&quot;,&#xd;
	&quot;cityName&quot;:&quot;&quot;,&#xd;
	&quot;countyId&quot;:&quot;${countyId}&quot;,&#xd;
	&quot;countyName&quot;:&quot;&quot;,&#xd;
	&quot;id&quot;:&quot;${opportunityId}&quot;,&#xd;
	&quot;invoiceTitle&quot;:&quot;发票title_${invoiceTitle}&quot;,&#xd;
	&quot;openBankName&quot;:&quot;招商银行&quot;,&#xd;
	&quot;provinceId&quot;:&quot;${provinceId}&quot;,&#xd;
	&quot;provinceName&quot;:&quot;&quot;,&#xd;
	&quot;taxNo&quot;:&quot;${__Random(300000000000,999999999999,)}&quot;,&#xd;
	&quot;tel&quot;:&quot;021-${__Random(30000000,99999999,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/addAuditingFinanceInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4571</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核——选择发票抬头列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/selectCustomerFinanceList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4424</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">invoiceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;cid&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户审核（工薪计）" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;statusRemark&quot;: &quot;QC6I6A0SPARPFL1CN3BJC38ALZ050483V5AXD600&quot;,&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户审核" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;statusRemark&quot;: &quot;ceshishenhe&quot;,&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: 2859,&#xd;
		&quot;contractSignDate&quot;: &quot;2019-12-04&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;2019-12-04&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;2020-12-03&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 471,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: &quot;00000000000182F7&quot;,&#xd;
		&quot;financeId&quot;: 837,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: &quot;13576656695&quot;,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;16180492695&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;北京市北京市东城区测试地址iuewriuweqwe&quot;,&#xd;
		&quot;invoiceTitle&quot;: &quot;发票title_${invoiceTitle}&quot;,&#xd;
		&quot;bankAccountNo&quot;: &quot;3456789776523456789&quot;,&#xd;
		&quot;taxNo&quot;: &quot;345678978068763467&quot;,&#xd;
		&quot;openBankName&quot;: &quot;十大风格是&quot;,&#xd;
		&quot;address&quot;: &quot;北京市北京市东城区的风格回家&quot;,&#xd;
		&quot;financeRowVersionId&quot;: &quot;00000000000182F8&quot;,&#xd;
		&quot;invoiceId&quot;: ${invoiceId},&#xd;
		&quot;invoiceTitleErr&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=640 and applysalesid=300037 and applytype=821 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客服主管分配客服" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${kgtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;salesId&quot;: -1,&#xd;
	&quot;telephone&quot;: &quot;&quot;,&#xd;
	&quot;isStar&quot;: 0,&#xd;
	&quot;cooperationNature&quot;: -1,&#xd;
	&quot;cooperationType&quot;: -1,&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 25,&#xd;
	&quot;unifiedCreditCode&quot;: &quot;&quot;,&#xd;
	&quot;customerServiceId&quot;: -1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/queryCustomerPageList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">customerId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客服分配" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerServiceIdLists&quot;:&quot;${customerId}&quot;,&#xd;
	&quot;customerServiceId&quot;:${customerServiceId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/customerDistributionServiceSingle</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and customerServiceId=${customerServiceId} and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户添加拜访信息" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加客户拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访计划id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">kplanid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户拜访计划" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访计划" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitPlan WHERE id=${kplanid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加客户拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访记录id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">kjid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;extra&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户拜访记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访记录" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitRecord WHERE id=${kjid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户添加拜访信息-非负责人-添加失败" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加商机拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新产品启动" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="选择联系人" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectContactsList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contactsId; contactsName; contactsMobile; contactsTel;contactsDept;contactsPost;contactsEmail;contactsType;decisionRole;isPrimaryContacts;isBelongToCurrent;belongToCustomerId;belongToCustomer</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id; $.data.records[0].name; $.data.records[0].mobile; $.data.records[0].tel; $.data.records[0].departmentName; $.data.records[0].positionName; $.data.records[0].email; $.data.records[0].contactsType; $.data.records[0].decisionRole; $.data.records[0].isPrimaryContacts; $.data.records[0].isBelongToCurrent; $.data.records[0].belongToCustomerId; $.data.records[0].belongToCustomer</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0;0;0;0;0;0;0;0;0;null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="选择发票收件人" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectInvoiceAddresseeList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceAddresseeId; invoiceAddressee; invoiceAddresseeMobile; invoiceAddresseeAddress</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id; $.data.records[0].name; $.data.records[0].mobile; $.data.records[0].address</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新产品启动（商保）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: ${customerId},&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;opportunityId&quot;: 0,&#xd;
		&quot;name&quot;: &quot;${contactsName}&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactsMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;${contactsTel}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;${contactsDept}&quot;,&#xd;
		&quot;positionName&quot;: &quot;${contactsPost}&quot;,&#xd;
		&quot;email&quot;: &quot;${contactsEmail}&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: ${isPrimaryContacts},&#xd;
		&quot;isBelongToCurrent&quot;: ${isBelongToCurrent},&#xd;
		&quot;belongToCustomerId&quot;: ${belongToCustomerId},&#xd;
		&quot;creatorId&quot;: 0,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: 0,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: 0,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId}&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0,&#xd;
		&quot;opportunityIntentionOfCI&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;${contractAgreementCode}&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 471,&#xd;
		&quot;signProductDetail&quot;: &quot;3454&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 592,&#xd;
		&quot;payBankName&quot;: &quot;中国银行&quot;,&#xd;
		&quot;payMode&quot;: 621,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;${invoiceAddressee}&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;${invoiceAddresseeMobile}&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;${invoiceAddresseeAddress}&quot;,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;openBankName&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;isNullMark&quot;: 0,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/startApplicationSaveByCustomer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新产品审核" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ytoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;applyType&quot;: -1, &#xd;
  &quot;customerName&quot;: &quot;&quot;, &#xd;
  &quot;pageIndex&quot;: 1, &#xd;
  &quot;pageSize&quot;: 25, &#xd;
  &quot;productName&quot;: &quot;&quot;, &#xd;
  &quot;status&quot;: -1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动审核-详细查看" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${applyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${customerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/startAuditDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/124?page_id=4574</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">financeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyOthers[1].financeId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核——选择发票抬头列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/selectCustomerFinanceList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4424</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">invoiceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;cid&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新产品审核（商保）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;applyId&quot;: &quot;${applyId}&quot;, &#xd;
  &quot;statusRemark&quot;: &quot;${custName}-审核通过&quot;, &#xd;
  &quot;customerName&quot;: &quot;${custName}&quot;, &#xd;
  &quot;startupApplyOthers&quot;: [&#xd;
    {&#xd;
      &quot;productId&quot;: 3, &#xd;
      &quot;contractId&quot;: 0, &#xd;
      &quot;contractSignDate&quot;: &quot;${sysDate}&quot;, &#xd;
      &quot;contractStartDate&quot;: &quot;${sysDate}&quot;, &#xd;
      &quot;contractEndDate&quot;: &quot;${shiftDate}&quot;, &#xd;
      &quot;contractAgreementCode&quot;: &quot;${contractAgreementCode}&quot;, &#xd;
      &quot;signPrincipalCid&quot;: &quot;288572&quot;, &#xd;
      &quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;, &#xd;
      &quot;agreementTemplateId&quot;: 561, &#xd;
      &quot;cooperationNature&quot;: 471, &#xd;
      &quot;signProductDetail&quot;: &quot;3454&quot;, &#xd;
      &quot;contractRowVersionId&quot;: &quot;000000000002F820&quot;, &#xd;
      &quot;financeId&quot;: ${financeId}, &#xd;
      &quot;invoicePaymentType&quot;: 581, &#xd;
      &quot;financeInvoiceType&quot;: 571, &#xd;
      &quot;paymentType&quot;: 592, &#xd;
      &quot;payBankName&quot;: &quot;中国银行&quot;, &#xd;
      &quot;payMode&quot;: 621, &#xd;
      &quot;tel&quot;: &quot;021-87398438&quot;, &#xd;
      &quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId}, &#xd;
	&quot;invoiceAddressee&quot;: &quot;${invoiceAddressee}&quot;,&#xd;
	&quot;invoiceAddresseeMobile&quot;: &quot;${invoiceAddresseeMobile}&quot;,&#xd;
	&quot;invoiceAddresseeAddress&quot;: &quot;${invoiceAddresseeAddress}&quot;,&#xd;
      &quot;invoiceTitle&quot;: &quot;${invoiceTitle}&quot;, &#xd;
      &quot;bankAccountNo&quot;: &quot;6225&quot;, &#xd;
      &quot;taxNo&quot;: &quot;919990397313&quot;, &#xd;
      &quot;openBankName&quot;: &quot;招商银行&quot;, &#xd;
      &quot;address&quot;: &quot;测试地址_SKhjDAXz8h&quot;, &#xd;
      &quot;financeRowVersionId&quot;: &quot;000000000002F821&quot;, &#xd;
      &quot;invoiceId&quot;: ${invoiceId}, &#xd;
      &quot;invoiceTitleErr&quot;: &quot;&quot;&#xd;
    }&#xd;
  ], &#xd;
  &quot;startupApplyAttachment&quot;: [&#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;营业执照复印件&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
    }, &#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;微知外部开户许可证&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
    }, &#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;工薪记协议&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=640 and applysalesid=300037  and isdel=0 and applytype=822 ;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接客服（普通客服交接给上司）" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ktoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客服交接" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;customerServiceIdLists&quot;:[{&quot;customerId&quot;:&quot;${customerId}&quot;,&quot;oldCustomerServiceId&quot;:${customerServiceId}}],&quot;customerServiceId&quot;:${gcustomerServiceId}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/customerHandoverService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and customerServiceId=${gcustomerServiceId} and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接销售（普通销售交接给上司）" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售交接" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityList&quot;:[{&quot;id&quot;:&quot;${customerId}&quot;,&quot;oldSalesId&quot;:${salseid}}],&quot;salesId&quot;:${gsalseid}}&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/customerHandoverSales</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接销售给下级" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售交接" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityList&quot;:[{&quot;id&quot;:&quot;${customerId}&quot;,&quot;oldSalesId&quot;:${gsalseid}}],&quot;salesId&quot;:${salseid}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/customerHandoverSales</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户流失" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${kgtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户流失" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${customerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="lostReason" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">首次客户流失${sysDate}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">lostReason</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/openOceanBO/lostCustomer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4424</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">invoiceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;cid&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037  and stageId=397 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="V过的商机阶段变更" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="110364421">time2</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1134370681">
                <stringProp name="-450137268">${__time(yyyy-MM-dd HH:mm:ss.SSS,time)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=395 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0 ;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(A-B)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A-B）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 394,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=394 and customerServiceId=0 and isactive=0 and islost=1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request商机联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityContacts WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tOpportunityInvoiceAddressee WHERE opportunityId=${opportunityId} and isDel=0;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原A类降至B类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(B-C)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（B-C）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 393,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=393 and customerServiceId=0 and isactive=0 and islost=1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原B类降至C类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(C-D)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（C-D）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 392,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=392 and customerServiceId=0 and isactive=0 and islost=1;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原C类降至D类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(D-N)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（D-N）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 391,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=391 and customerServiceId=0 and isactive=0 and islost=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原D类降至N类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(A-C)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A-C）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 393,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=393 and customerServiceId=0 and isactive=0 and islost=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原A类降至C类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="阶段降级发送消息(C-N)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（C-N）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 391,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询商机和降级消息" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=391 and customerServiceId=0 and isactive=0 and islost=1;</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询降级消息" enabled="true">
                <stringProp name="dataSource">testsql</stringProp>
                <stringProp name="query">SELECT count(id) FROM tMessage WHERE  biztype=741 and userid=${gsalseid} and createtime&gt;=&apos;${time2}&apos; and creatorid=${salseid} and isread=0 and isdel=0 and title=&apos;您下属原始们销售将商机${custName}由原C类降至N类，请核实！&apos; ;

</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Prepared Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">count</stringProp>
              </JDBCSampler>
              <hashTree>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;2&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=395 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0 ;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="V过的商机添加拜访信息" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访计划id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">vkplanid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询V过商机拜访计划" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访计划" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitPlan WHERE id=${vkplanid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访记录id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">vjid</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;extra&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询V过商机拜访记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访记录" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitRecord WHERE id=${vjid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="V过的商机添加拜访信息-非负责人-添加失败" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-501349826">&quot;result&quot;:500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接销售（普通销售交接给上司）" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售交接" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityList&quot;:[{&quot;id&quot;:&quot;${opportunityId}&quot;,&quot;oldSalesId&quot;:${salseid}}],&quot;salesId&quot;:${gsalseid}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/opportunityHandoverSales</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="V过的商机添加拜访信息-销售管理" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访计划id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">vkplanid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询V过商机拜访计划" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访计划" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitPlan WHERE id=${vkplanid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加V过商机拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC/opportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访记录id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">gvjid</stringProp>
              <stringProp name="RegexExtractor.regex">{&quot;extra&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询V过商机拜访记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访记录" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitRecord WHERE id=${gvjid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="交接销售给下级" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${gtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="销售交接" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityList&quot;:[{&quot;id&quot;:&quot;${opportunityId}&quot;,&quot;oldSalesId&quot;:${gsalseid}}],&quot;salesId&quot;:${salseid}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/opportunityHandoverSales</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="普通销售V过商机操作（放弃，认领，修改，客户启动、驳回，通过）" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机-放弃" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;opportunityType&quot;:764,&quot;abandonReason&quot;:${giveUpReason},&quot;giveUpIdList&quot;:[{&quot;id&quot;:&quot;${opportunityId}&quot;,&quot;salesId&quot;:${salesId},&quot;salesDeptId&quot;:0}],&quot;remark&quot;:&quot;jmeter数据操作首次放弃&quot;,&quot;operatePlatform&quot;:${operatePlatform},&quot;operateType&quot;:892}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/giveUpMineBusinessOpportunitySingle</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4375</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=0 and stageId=391 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="部门商机认领" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;operatePlatform&quot;: ${operatePlatform},&#xd;
	&quot;opportunityId&quot;: &quot;${opportunityId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/deptBO/claimBusiness</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4485</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户修改（A）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
	&quot;opportunityBasicInfo&quot;: {&#xd;
		&quot;channel&quot;: 42,&#xd;
		&quot;channelType&quot;: 31,&#xd;
		&quot;provinceId&quot;: ${provinceId},&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: ${cityId},&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: ${countyId},&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;detailAddress&quot;: &quot;测试地址${randStr}&quot;,&#xd;
		&quot;industry&quot;: ${industryCode},&#xd;
		&quot;introduce&quot;: &quot;&quot;,&#xd;
		&quot;isStar&quot;: ${__Random(0,1,)},&#xd;
		&quot;opportunityEnglishName&quot;: &quot;&quot;,&#xd;
		&quot;opportunityName&quot;: &quot;${custName}&quot;,&#xd;
		&quot;opportunityShortName&quot;: &quot;&quot;,&#xd;
		&quot;opportunitySource&quot;: ${opportunitySource},&#xd;
		&quot;stageId&quot;: 395,&#xd;
		&quot;tax&quot;: &quot;&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;website&quot;: &quot;&quot;,&#xd;
		&quot;relationCustomer&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;opportunityIntention&quot;: {&#xd;
		&quot;cooperationType&quot;: ${cooperationType},&#xd;
		&quot;opportunityIntentionOfCI&quot;: {&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isOpenMicroseerPay&quot;: 0,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfMaker&quot;: {&#xd;
			&quot;boughtCIEndDate&quot;: &quot;&quot;,&#xd;
			&quot;boughtCIPrice&quot;: 0,&#xd;
			&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
			&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
			&quot;empCount&quot;: 200,&#xd;
			&quot;firstStartupAmount&quot;: 200,&#xd;
			&quot;firstStartupNumber&quot;: 200,&#xd;
			&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
			&quot;isOpenMicroseerPay&quot;: 1,&#xd;
			&quot;isSignCI&quot;: 1,&#xd;
			&quot;predictAmountPerMonth&quot;: 200,&#xd;
			&quot;predictNumberPerMonth&quot;: 200,&#xd;
			&quot;predictStartupDate&quot;: &quot;${sysDate}&quot;,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
&#xd;
		&quot;opportunityIntentionOfMall&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;archiveType&quot;: null,&#xd;
			&quot;averageBudget&quot;: null,&#xd;
			&quot;firstScene&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;predictAmountPerYear&quot;: null,&#xd;
			&quot;predictNumber&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupCityRemark&quot;: &quot;&quot;,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;possibleCityInvolved&quot;: &quot;&quot;,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;,&#xd;
			&quot;sendReceiveType&quot;: null&#xd;
		},&#xd;
		&quot;opportunityIntentionOfSalary&quot;: {&#xd;
			&quot;cooperationNature&quot;: &quot;&quot;,&#xd;
			&quot;declareTaxType&quot;: null,&#xd;
			&quot;empCount&quot;: null,&#xd;
			&quot;firstStartupNumber&quot;: null,&#xd;
			&quot;isOpenMicroseerPay&quot;: null,&#xd;
			&quot;isSalarySSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFBaseIdentical&quot;: null,&#xd;
			&quot;isTaxSSPFCityIdentical&quot;: null,&#xd;
			&quot;isTaxSalaryAmountIdentical&quot;: null,&#xd;
			&quot;predictNumberPerMonth&quot;: null,&#xd;
			&quot;predictStartupDate&quot;: null,&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;productId&quot;: &quot;1,3&quot;&#xd;
	},&#xd;
	&quot;opportunityContactsBaseList&quot;: [{&#xd;
		&quot;contactsId&quot;: 0,&#xd;
		&quot;opportunityContacts&quot;: {&#xd;
			&quot;contactsId&quot;: 0,&#xd;
			&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
			&quot;isPrimaryContacts&quot;: 1,&#xd;
			&quot;contactsType&quot;: 81,&#xd;
			&quot;belongToCustomerId&quot;: 0,&#xd;
			&quot;belongToCustomerName&quot;:&quot;当前客户&quot;,&#xd;
			&quot;isBelongToCurrent&quot;:0,&#xd;
			&quot;decisionRole&quot;: 72,&#xd;
			&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
			&quot;positionName&quot;: &quot;总监&quot;,&#xd;
			&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
			&quot;tel&quot;: &quot;021-${__Random(30000000,99999999,)}&quot;,&#xd;
			&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
			&quot;opportunityContactsOtherContactList&quot;: [],&#xd;
			&quot;remark&quot;: &quot;&quot;&#xd;
		},&#xd;
		&quot;opportunityContactsPersonalInfo&quot;: {&#xd;
			&quot;intimacy&quot;: 0,&#xd;
			&quot;nativeProvinceId&quot;: 0,&#xd;
			&quot;nativeCityId&quot;: 0,&#xd;
			&quot;nativeCountyId&quot;: 0,&#xd;
			&quot;constellation&quot;: 0,&#xd;
			&quot;character&quot;: 0,&#xd;
			&quot;zodiacSign&quot;: 0,&#xd;
			&quot;religion&quot;: 0,&#xd;
			&quot;birthday&quot;: &quot;1899-12-30&quot;,&#xd;
			&quot;hoppy&quot;: &quot;0&quot;,&#xd;
			&quot;residentialProvinceId&quot;: 0,&#xd;
			&quot;residentialCityId&quot;: 0,&#xd;
			&quot;residentialCountyId&quot;: 0,&#xd;
			&quot;residentialAddress&quot;: &quot;&quot;&#xd;
		}&#xd;
	}],&#xd;
	&quot;invoiceAddresseeList&quot;: [{&#xd;
		&quot;id&quot;: 0,&#xd;
		&quot;name&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;mobile&quot;: &quot;${mobile}&quot;,&#xd;
		&quot;provinceId&quot;: &quot;${provinceId}&quot;,&#xd;
		&quot;provinceName&quot;: &quot;&quot;,&#xd;
		&quot;cityId&quot;: &quot;${cityId}&quot;,&#xd;
		&quot;cityName&quot;: &quot;&quot;,&#xd;
		&quot;countyId&quot;: &quot;${countyId}&quot;,&#xd;
		&quot;countyName&quot;: &quot;&quot;,&#xd;
		&quot;address&quot;: &quot;大法师&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/updateOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and stageId=395 and customerServiceId=0 and isactive=0 and islost=1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and customerId=${customerId} and stageId=395 and salesid=300037 and isactive=1 and isdel=0 ;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的客户页面联系人查询" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${opportunityId}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/opportunityCustomer/getOpportunityDetailCommon</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contractId1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.contacts[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="二次客户启动" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="基本信息——选择发票收件人" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="opportunityId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${opportunityId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">opportunityId</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">${http}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectInvoiceAddresseeList</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invoiceAddresseeId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（全部）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 5,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;89734897238947349578&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的风格对方是个&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],		&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（除代发工资外全部产品）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 473,&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],		&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（工薪记）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9834987238947349578987234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;221128831&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;点仕（泉州）信息科技有限公司&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;但是官方的说法更&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 0,&#xd;
		&quot;payFrequency&quot;: 2,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;2019-11-30&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 1,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 0,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 1,&#xd;
		&quot;boughtCIPrice&quot;: &quot;2000&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;2020-11-30&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;地方大师傅&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 122,&#xd;
		&quot;taskName&quot;: &quot;会销展会&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;电饭锅&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;第三方公司的&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 121,&#xd;
		&quot;taskName&quot;: &quot;市场营销/销售&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;地方古典风格&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;的说法的说法&quot;&#xd;
	}, {&#xd;
		&quot;sceneId&quot;: 19,&#xd;
		&quot;sceneName&quot;: &quot;市场推广&quot;,&#xd;
		&quot;taskId&quot;: 60,&#xd;
		&quot;taskName&quot;: &quot;市场调研&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;覆盖梵蒂冈&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;地方归属感&quot;&#xd;
	}],&#xd;
	&quot;startupApplyMakerRebateInfo&quot;: [{&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;345354356345345345234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;33&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;2&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;2&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:00:49.516Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265886&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}, {&#xd;
		&quot;rebateTargetType&quot;: 931,&#xd;
		&quot;rebateAgreementCode&quot;: &quot;456908349820239408234&quot;,&#xd;
		&quot;customerInfo&quot;: &quot;44&quot;,&#xd;
		&quot;rebatePoint&quot;: &quot;3&quot;,&#xd;
		&quot;rebateTaxPoint&quot;: &quot;3&quot;,&#xd;
		&quot;settleDay&quot;: &quot;2019-11-30T08:05:04.823Z&quot;,&#xd;
		&quot;settleType&quot;: 692,&#xd;
		&quot;bankAccountNo&quot;: &quot;6226598866532265887&quot;,&#xd;
		&quot;openBankName&quot;: &quot;招行&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（社保）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: ${customerId},&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contractId1},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;opportunityId&quot;: 0,&#xd;
		&quot;contactsId&quot;: ${contractId1},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 1,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: 0,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: 0,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: &quot;${customerId}&quot;&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 1&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: 10874,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,		&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（商保）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;90834897237894293748972134&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;爱的光放大师傅&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（商城）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 1,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 4,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;98764283748973423454&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;的方式给多少公分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户启动（代发工资）" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;021-${__Random(20000000,99999999,)}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: &quot;sales@viphrm.com&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 0,&#xd;
		&quot;belongToCustomerId&quot;: 0,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 1,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 5,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;89734897238947349578&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;的风格对方是个&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: 2419,&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15111583699&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
              <stringProp name="HTTPSampler.port">${webPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="88863673">&quot;result&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;cooperationNature&quot;: -1,&#xd;
	&quot;cooperationType&quot;: -1,&#xd;
	&quot;isStar&quot;: 0,&#xd;
	&quot;salesId&quot;: -1,&#xd;
	&quot;telephone&quot;: &quot;&quot;,&#xd;
	&quot;stageId&quot;: &quot;&quot;,&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 25&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].applyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1887589312">&quot;totalCount&quot;:1,</stringProp>
                <stringProp name="-1890703552">&quot;stageId&quot;:395</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动申请——详情页信息查询" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${applyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">821</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getStartUpApplyInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contractId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyMaker.contractId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动驳回" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;rejectReason&quot;:&quot;启动驳回${sysTime}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/auditing/reject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=650 and applysalesid=300037 and applytype=821 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户再次启动" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contractId1},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;customerId&quot;: null,&#xd;
		&quot;opportunityId&quot;: null,&#xd;
		&quot;applyId&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contractId1},&#xd;
		&quot;name&quot;: &quot;测试联系人&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;&quot;,&#xd;
		&quot;departmentName&quot;: &quot;销售一部&quot;,&#xd;
		&quot;positionName&quot;: &quot;总监&quot;,&#xd;
		&quot;email&quot;: null,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: 1,&#xd;
		&quot;isBelongToCurrent&quot;: 1,&#xd;
		&quot;belongToCustomerId&quot;: 1,&#xd;
		&quot;creatorId&quot;: null,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: null,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: null,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: &quot;客户_Survenentor WorldWide &quot;&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfCI&quot;: 0,&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyMaker&quot;: {&#xd;
		&quot;productId&quot;: 1,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;wwww2342343678654234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: 221128831,&#xd;
		&quot;signPrincipalName&quot;: &quot;&quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: ${cooperationNature},&#xd;
		&quot;signProductDetail&quot;: &quot;签约产品明细&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 582,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;15964641148&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;大法师&quot;,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;makerId&quot;: null,&#xd;
		&quot;isAPIAccess&quot;: 1,&#xd;
		&quot;payFrequency&quot;: 23,&#xd;
		&quot;billMode&quot;: 661,&#xd;
		&quot;billRule&quot;: 671,&#xd;
		&quot;firstPaymentDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;firstStartupNumber&quot;: 200,&#xd;
		&quot;firstStartupAmount&quot;: 200,&#xd;
		&quot;predictNumberPerMonth&quot;: 200,&#xd;
		&quot;predictAmountPerMonth&quot;: 200,&#xd;
		&quot;makerRowVersionId&quot;: null,&#xd;
		&quot;sceneName&quot;: null,&#xd;
		&quot;taskName&quot;: null,&#xd;
		&quot;taskDescription&quot;: null,&#xd;
		&quot;feeSettleCalcRule&quot;: null,&#xd;
		&quot;isRebate&quot;: 0,&#xd;
		&quot;ciId&quot;: null,&#xd;
		&quot;isSignCI&quot;: 1,&#xd;
		&quot;isAlreadyBoughtCI&quot;: 0,&#xd;
		&quot;boughtCIPrice&quot;: &quot;0&quot;,&#xd;
		&quot;boughtCIEndDate&quot;: &quot;1900-01-01&quot;,&#xd;
		&quot;boughtCIScheme&quot;: &quot;&quot;,&#xd;
		&quot;ciRowVersionId&quot;: null,&#xd;
		&quot;offerType&quot;: 0,&#xd;
		&quot;vatAndSurtax&quot;: null,&#xd;
		&quot;priceType&quot;: 0,&#xd;
		&quot;tieredPriceType&quot;: null,&#xd;
		&quot;serviceFee&quot;: null,&#xd;
		&quot;paymentChannel&quot;: 0,&#xd;
		&quot;paymentAccountNo&quot;: null,&#xd;
		&quot;makerPaymentType&quot;: 0,&#xd;
		&quot;startupApplyMakerScheme&quot;: null,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;startupApplyMakerScheme&quot;: [{&#xd;
		&quot;sceneId&quot;: 57,&#xd;
		&quot;sceneName&quot;: &quot;出行行业&quot;,&#xd;
		&quot;taskId&quot;: 71,&#xd;
		&quot;taskName&quot;: &quot;网约车司机&quot;,&#xd;
		&quot;feeSettleCalcRule&quot;: &quot;送豆腐大叔&quot;,&#xd;
		&quot;taskDescription&quot;: &quot;东方大事发生的发&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: []&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/startApplicationSaveByOpportunity</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的商机列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;cooperationNature&quot;: -1,&#xd;
	&quot;cooperationType&quot;: -1,&#xd;
	&quot;isStar&quot;: 0,&#xd;
	&quot;salesId&quot;: -1,&#xd;
	&quot;telephone&quot;: &quot;&quot;,&#xd;
	&quot;stageId&quot;: &quot;&quot;,&#xd;
	&quot;pageIndex&quot;: 1,&#xd;
	&quot;pageSize&quot;: 25&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].applyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1887589312">&quot;totalCount&quot;:1,</stringProp>
                <stringProp name="-1890703552">&quot;stageId&quot;:395</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动申请——详情页信息查询" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${applyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">821</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/getStartUpApplyInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contractId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyMaker.contractId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="二次运营审核" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ytoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核-发票抬头添加保存接口" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;address&quot;:&quot;${address}&quot;,&#xd;
	&quot;bankAccountNo&quot;:&quot;6225&quot;,&#xd;
	&quot;cid&quot;:&quot;288572&quot;,&#xd;
	&quot;cityId&quot;:&quot;${cityId}&quot;,&#xd;
	&quot;cityName&quot;:&quot;&quot;,&#xd;
	&quot;countyId&quot;:&quot;${countyId}&quot;,&#xd;
	&quot;countyName&quot;:&quot;&quot;,&#xd;
	&quot;id&quot;:&quot;${opportunityId}&quot;,&#xd;
	&quot;invoiceTitle&quot;:&quot;发票1title_${invoiceTitle}&quot;,&#xd;
	&quot;openBankName&quot;:&quot;招商银行&quot;,&#xd;
	&quot;provinceId&quot;:&quot;${provinceId}&quot;,&#xd;
	&quot;provinceName&quot;:&quot;&quot;,&#xd;
	&quot;taxNo&quot;:&quot;${__Random(300000000000,999999999999,)}&quot;,&#xd;
	&quot;tel&quot;:&quot;021-${__Random(30000000,99999999,)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/addAuditingFinanceInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4571</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核——选择发票抬头列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/selectCustomerFinanceList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4424</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">invoiceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;cid&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户审核（工薪计）" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;statusRemark&quot;: &quot;QC6I6A0SPARPFL1CN3BJC38ALZ050483V5AXD600&quot;,&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户审核" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;applyId&quot;: ${applyId},&#xd;
	&quot;customerName&quot;: &quot;${custName}&quot;,&#xd;
	&quot;statusRemark&quot;: &quot;ceshishenhe&quot;,&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 2,&#xd;
		&quot;contractId&quot;: 2859,&#xd;
		&quot;contractSignDate&quot;: &quot;2019-12-04&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;2019-12-04&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;2020-12-03&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;9085083457893458234&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 471,&#xd;
		&quot;signProductDetail&quot;: &quot;对方感到过分&quot;,&#xd;
		&quot;contractRowVersionId&quot;: &quot;00000000000182F7&quot;,&#xd;
		&quot;financeId&quot;: 837,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 591,&#xd;
		&quot;payBankName&quot;: null,&#xd;
		&quot;payMode&quot;: null,&#xd;
		&quot;tel&quot;: &quot;13576656695&quot;,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;阿斯达克&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;16180492695&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;北京市北京市东城区测试地址iuewriuweqwe&quot;,&#xd;
		&quot;invoiceTitle&quot;: &quot;发票title_${invoiceTitle}&quot;,&#xd;
		&quot;bankAccountNo&quot;: &quot;3456789776523456789&quot;,&#xd;
		&quot;taxNo&quot;: &quot;345678978068763467&quot;,&#xd;
		&quot;openBankName&quot;: &quot;十大风格是&quot;,&#xd;
		&quot;address&quot;: &quot;北京市北京市东城区的风格回家&quot;,&#xd;
		&quot;financeRowVersionId&quot;: &quot;00000000000182F8&quot;,&#xd;
		&quot;invoiceId&quot;: ${invoiceId},&#xd;
		&quot;invoiceTitleErr&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=640 and applysalesid=300037 and applytype=821 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and customerServiceId=0 and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询商机主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tOpportunity WHERE id=${opportunityId} and stageId=395 and salesid=300037 and isactive=0 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客服主管分配客服" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${kgtoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客服分配" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;customerServiceIdLists&quot;:&quot;${customerId}&quot;,&#xd;
	&quot;customerServiceId&quot;:${customerServiceId}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/customerDistributionServiceSingle</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询客户主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomer WHERE id=${customerId} and salesid=300037 and customerServiceId=${customerServiceId} and isactive=1 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request客户联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerContacts WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request发票联系人" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerInvoiceAddressee WHERE customerId=${customerId} and isDel=0;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(Integer.parseInt(count)&gt;=1 )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新产品启动" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="选择联系人" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectContactsList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">contactsId; contactsName; contactsMobile; contactsTel;contactsDept;contactsPost;contactsEmail;contactsType;decisionRole;isPrimaryContacts;isBelongToCurrent;belongToCustomerId;belongToCustomer</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id; $.data.records[0].name; $.data.records[0].mobile; $.data.records[0].tel; $.data.records[0].departmentName; $.data.records[0].positionName; $.data.records[0].email; $.data.records[0].contactsType; $.data.records[0].decisionRole; $.data.records[0].isPrimaryContacts; $.data.records[0].isBelongToCurrent; $.data.records[0].belongToCustomerId; $.data.records[0].belongToCustomer</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0;0;0;0;0;0;0;0;0;null</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="选择发票收件人" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineBO/selectInvoiceAddresseeList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4435</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">invoiceAddresseeId; invoiceAddressee; invoiceAddresseeMobile; invoiceAddresseeAddress</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id; $.data.records[0].name; $.data.records[0].mobile; $.data.records[0].address</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0;0;0;0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新产品启动（商保）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;startupApplyBasic&quot;: {&#xd;
		&quot;customerId&quot;: ${customerId},&#xd;
		&quot;opportunityId&quot;: ${opportunityId}&#xd;
	},&#xd;
	&quot;startupApplyContacts&quot;: [{&#xd;
		&quot;id&quot;: ${contactsId},&#xd;
		&quot;cid&quot;: null,&#xd;
		&quot;opportunityId&quot;: 0,&#xd;
		&quot;name&quot;: &quot;${contactsName}&quot;,&#xd;
		&quot;mobile&quot;: &quot;${contactsMobile}&quot;,&#xd;
		&quot;tel&quot;: &quot;${contactsTel}&quot;,&#xd;
		&quot;departmentName&quot;: &quot;${contactsDept}&quot;,&#xd;
		&quot;positionName&quot;: &quot;${contactsPost}&quot;,&#xd;
		&quot;email&quot;: &quot;${contactsEmail}&quot;,&#xd;
		&quot;remark&quot;: null,&#xd;
		&quot;contactsType&quot;: ${contactsType},&#xd;
		&quot;decisionRole&quot;: ${decisionRole},&#xd;
		&quot;isPrimaryContacts&quot;: ${isPrimaryContacts},&#xd;
		&quot;isBelongToCurrent&quot;: ${isBelongToCurrent},&#xd;
		&quot;belongToCustomerId&quot;: ${belongToCustomerId},&#xd;
		&quot;creatorId&quot;: 0,&#xd;
		&quot;creatorName&quot;: null,&#xd;
		&quot;createTime&quot;: null,&#xd;
		&quot;modifierId&quot;: 0,&#xd;
		&quot;modifierName&quot;: null,&#xd;
		&quot;modifyTime&quot;: null,&#xd;
		&quot;isDel&quot;: 0,&#xd;
		&quot;rowVersionId&quot;: null,&#xd;
		&quot;belongToCustomer&quot;: null,&#xd;
		&quot;contactsId&quot;: ${contactsId}&#xd;
	}],&#xd;
	&quot;opportunityIntentionOf&quot;: {&#xd;
		&quot;opportunityIntentionOfMaker&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSSPF&quot;: 0,&#xd;
		&quot;opportunityIntentionOfCI&quot;: 1,&#xd;
		&quot;opportunityIntentionOfMall&quot;: 0,&#xd;
		&quot;opportunityIntentionOfSalary&quot;: 0&#xd;
	},&#xd;
	&quot;startupApplyOthers&quot;: [{&#xd;
		&quot;productId&quot;: 3,&#xd;
		&quot;contractId&quot;: null,&#xd;
		&quot;contractSignDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractStartDate&quot;: &quot;${sysDate}&quot;,&#xd;
		&quot;contractEndDate&quot;: &quot;${shiftDate}&quot;,&#xd;
		&quot;contractAgreementCode&quot;: &quot;${contractAgreementCode}&quot;,&#xd;
		&quot;signPrincipalCid&quot;: &quot;288572&quot;,&#xd;
		&quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;,&#xd;
		&quot;agreementTemplateId&quot;: 561,&#xd;
		&quot;cooperationNature&quot;: 471,&#xd;
		&quot;signProductDetail&quot;: &quot;3454&quot;,&#xd;
		&quot;contractRowVersionId&quot;: null,&#xd;
		&quot;financeId&quot;: null,&#xd;
		&quot;invoicePaymentType&quot;: 581,&#xd;
		&quot;financeInvoiceType&quot;: 571,&#xd;
		&quot;paymentType&quot;: 592,&#xd;
		&quot;payBankName&quot;: &quot;中国银行&quot;,&#xd;
		&quot;payMode&quot;: 621,&#xd;
		&quot;tel&quot;: null,&#xd;
		&quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId},&#xd;
		&quot;invoiceAddressee&quot;: &quot;${invoiceAddressee}&quot;,&#xd;
		&quot;invoiceAddresseeMobile&quot;: &quot;${invoiceAddresseeMobile}&quot;,&#xd;
		&quot;invoiceAddresseeAddress&quot;: &quot;${invoiceAddresseeAddress}&quot;,&#xd;
		&quot;invoiceTitle&quot;: null,&#xd;
		&quot;bankAccountNo&quot;: null,&#xd;
		&quot;taxNo&quot;: null,&#xd;
		&quot;openBankName&quot;: null,&#xd;
		&quot;address&quot;: null,&#xd;
		&quot;financeRowVersionId&quot;: null,&#xd;
		&quot;isNullMark&quot;: 0,&#xd;
		&quot;invoiceAddresseeMsg&quot;: &quot;&quot;&#xd;
	}],&#xd;
	&quot;startupApplyAttachment&quot;: [{&#xd;
		&quot;dataName&quot;: &quot;营业执照复印件&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;微知外部开户许可证&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
	}, {&#xd;
		&quot;dataName&quot;: &quot;工薪记协议&quot;,&#xd;
		&quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/mineCust/startApplicationSaveByCustomer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4411</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新产品审核" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ytoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Mscid</stringProp>
                <stringProp name="Header.value">288572</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核列表" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;applyType&quot;: -1, &#xd;
  &quot;customerName&quot;: &quot;&quot;, &#xd;
  &quot;pageIndex&quot;: 1, &#xd;
  &quot;pageSize&quot;: 25, &#xd;
  &quot;productName&quot;: &quot;&quot;, &#xd;
  &quot;status&quot;: -1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/getList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">applyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.records[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="启动审核-详细查看" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="applyId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${applyId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyId</stringProp>
                </elementProp>
                <elementProp name="customerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${customerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customerId</stringProp>
                </elementProp>
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
                <elementProp name="applyType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">applyType</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/startAuditDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/124?page_id=4574</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">financeId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.startupApplyOthers[1].financeId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="审核——选择发票抬头列表" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="opportunityId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${opportunityId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">opportunityId</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/selectCustomerFinanceList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">http://192.168.1.243/showdoc/web/#/140?page_id=4424</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">invoiceId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),&quot;cid&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新产品审核（商保）" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;applyId&quot;: &quot;${applyId}&quot;, &#xd;
  &quot;statusRemark&quot;: &quot;${custName}-审核通过&quot;, &#xd;
  &quot;customerName&quot;: &quot;${custName}&quot;, &#xd;
  &quot;startupApplyOthers&quot;: [&#xd;
    {&#xd;
      &quot;productId&quot;: 3, &#xd;
      &quot;contractId&quot;: ${contractId}, &#xd;
      &quot;contractSignDate&quot;: &quot;${sysDate}&quot;, &#xd;
      &quot;contractStartDate&quot;: &quot;${sysDate}&quot;, &#xd;
      &quot;contractEndDate&quot;: &quot;${shiftDate}&quot;, &#xd;
      &quot;contractAgreementCode&quot;: &quot;${contractAgreementCode}&quot;, &#xd;
      &quot;signPrincipalCid&quot;: &quot;288572&quot;, &#xd;
      &quot;signPrincipalName&quot;: &quot;微知(上海)服务外包科技有限公司 &quot;, &#xd;
      &quot;agreementTemplateId&quot;: 561, &#xd;
      &quot;cooperationNature&quot;: 471, &#xd;
      &quot;signProductDetail&quot;: &quot;3454&quot;, &#xd;
      &quot;contractRowVersionId&quot;: &quot;000000000002F820&quot;, &#xd;
      &quot;financeId&quot;: ${financeId}, &#xd;
      &quot;invoicePaymentType&quot;: 581, &#xd;
      &quot;financeInvoiceType&quot;: 571, &#xd;
      &quot;paymentType&quot;: 592, &#xd;
      &quot;payBankName&quot;: &quot;中国银行&quot;, &#xd;
      &quot;payMode&quot;: 621, &#xd;
      &quot;tel&quot;: &quot;021-87398438&quot;, &#xd;
      &quot;invoiceAddresseeId&quot;: ${invoiceAddresseeId}, &#xd;
	&quot;invoiceAddressee&quot;: &quot;${invoiceAddressee}&quot;,&#xd;
	&quot;invoiceAddresseeMobile&quot;: &quot;${invoiceAddresseeMobile}&quot;,&#xd;
	&quot;invoiceAddresseeAddress&quot;: &quot;${invoiceAddresseeAddress}&quot;,&#xd;
      &quot;invoiceTitle&quot;: &quot;${invoiceTitle}&quot;, &#xd;
      &quot;bankAccountNo&quot;: &quot;6225&quot;, &#xd;
      &quot;taxNo&quot;: &quot;919990397313&quot;, &#xd;
      &quot;openBankName&quot;: &quot;招商银行&quot;, &#xd;
      &quot;address&quot;: &quot;测试地址_SKhjDAXz8h&quot;, &#xd;
      &quot;financeRowVersionId&quot;: &quot;000000000002F821&quot;, &#xd;
      &quot;invoiceId&quot;: ${invoiceId}, &#xd;
      &quot;invoiceTitleErr&quot;: &quot;&quot;&#xd;
    }&#xd;
  ], &#xd;
  &quot;startupApplyAttachment&quot;: [&#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;营业执照复印件&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/d321b03129514b069d93a98b46d463c3.jpg&quot;&#xd;
    }, &#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;微知外部开户许可证&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/93bb45c3eb984c87ba615fbdd4bdff40.jpg&quot;&#xd;
    }, &#xd;
    {&#xd;
      &quot;dataName&quot;: &quot;工薪记协议&quot;, &#xd;
      &quot;dataUrl&quot;: &quot;288572/201911/f1eec3a0b23942cb8519ad1533f8b6a8.jpg&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${mossHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/mossOpCenter/companyAuditing/passAudit</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/pineAppleServer/auditing/passAudit</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询启动" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询启动主表" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tStartupApply WHERE id=${applyId} and status=640 and applysalesid=300037  and isdel=0 and applytype=822 ;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户添加拜访信息" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${ptoken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加客户拜访计划" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 2,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;visitDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/pineAppleServer/visitPlanPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${ptoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访计划id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">kplanid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户拜访计划" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访计划" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitPlan WHERE id=${kplanid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加客户拜访记录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accompanyVisitorIds&quot;: &quot;86,91&quot;,&#xd;
  &quot;contactsDecisionRoleName&quot;: &quot;72&quot;,&#xd;
  &quot;contactsId&quot;: 0,&#xd;
  &quot;contactsMobile&quot;: &quot;18989898989&quot;,&#xd;
  &quot;contactsName&quot;: &quot;老邢&quot;,&#xd;
  &quot;contactsPositionName&quot;: &quot;总监&quot;,&#xd;
  &quot;content&quot;: &quot;接口测试添加&quot;,&#xd;
  &quot;isKeyPerson&quot;: 1,&#xd;
  &quot;customerType&quot;: 1,&#xd;
  &quot;opportunityId&quot;: ${opportunityId},&#xd;
  &quot;predictDealDate&quot;: &quot;${visitDate}&quot;,&#xd;
  &quot;visitItems&quot;: &quot;431,432&quot;,&#xd;
  &quot;visitType&quot;: 451,&#xd;
  &quot;latitude&quot;: 0,&#xd;
  &quot;localAddress&quot;: &quot;&quot;,&#xd;
  &quot;longitude&quot;: 0&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${webHost}</stringProp>
            <stringProp name="HTTPSampler.port">${webHost}</stringProp>
            <stringProp name="HTTPSampler.protocol">${http}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">pineAppleServer/visitRecordsPC</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器（拜访记录id）" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">kjid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;extra&quot;:(.+?)}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="88863673">&quot;result&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="查询客户拜访记录" enabled="true"/>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="ssJDBC Request查询拜访记录" enabled="true">
              <stringProp name="dataSource">testsql</stringProp>
              <stringProp name="query">SELECT count(id) FROM tCustomerVisitRecord WHERE id=${kjid} and visitType=451 and isdel=0;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Prepared Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">count</stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">//获取传入参数并且后面作为预期值
count=bsh.args[0];


if(count.equals(&quot;1&quot;) )
{
	Failure=false;
	FailureMessage=&quot;校验成功&quot;;
}
else
{
	Failure=true;
	FailureMessage=&quot;校验失败!数据不存在&quot;+salesid;
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters">${count_1}</stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
